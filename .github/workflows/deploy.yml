name: 🚀 Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # ✅ Job de Linting y Tests
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📋 Install dependencies
      run: npm ci

    - name: 🔍 Type checking
      run: npm run type-check
      continue-on-error: true # Los warnings de TS no deben fallar el build

    - name: 🏗️ Test build
      run: npm run build:deploy

  # 🚀 Job de Deploy a Vercel
  deploy:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js  
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📋 Install dependencies
      run: npm ci

    - name: 🏗️ Build project
      run: npm run build:deploy

    - name: 📦 Install Vercel CLI
      run: npm install --global vercel@latest

    - name: 🔗 Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

    - name: 🏗️ Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

    - name: 🚀 Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  # 📊 Job de Performance Testing (solo en PRs)
  performance:
    name: 📊 Performance Test
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'pull_request'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📋 Install dependencies
      run: npm ci

    - name: 🏗️ Build project
      run: npm run build:deploy

    - name: 🚀 Start preview server
      run: npm run preview &
      
    - name: 💤 Wait for server
      run: sleep 10

    - name: 📊 Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        uploadDir: './dist'
        configPath: './lighthouserc.json'
        temporaryPublicStorage: true 